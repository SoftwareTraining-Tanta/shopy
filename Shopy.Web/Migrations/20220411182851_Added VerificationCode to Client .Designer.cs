// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shopy.Web.Models;

#nullable disable

namespace Shopy.Web.Migrations
{
    [DbContext(typeof(ShopyCtx))]
    [Migration("20220411182851_Added VerificationCode to Client ")]
    partial class AddedVerificationCodetoClient
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Shopy.Web.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("City")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("city");

                    b.Property<string>("ClientUsername")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("clientUsername");

                    b.Property<string>("Country")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("country");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("email");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ClientUsername" }, "clientUsername");

                    b.ToTable("carts");
                });

            modelBuilder.Entity("Shopy.Web.Models.Client", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("username");

                    b.Property<string>("City")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("country");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("VerificationCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("verificationCode");

                    b.HasKey("Username")
                        .HasName("PRIMARY");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("Shopy.Web.Models.Model", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("name");

                    b.Property<string>("Brand")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("brand");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("color");

                    b.Property<string>("Features")
                        .HasMaxLength(600)
                        .HasColumnType("varchar(600)")
                        .HasColumnName("features");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("imagePath");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(9,2)")
                        .HasColumnName("price");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(2,1)")
                        .HasColumnName("rate");

                    b.Property<decimal?>("SalePrice")
                        .HasColumnType("decimal(10,0)")
                        .HasColumnName("salePrice");

                    b.HasKey("Name")
                        .HasName("PRIMARY");

                    b.ToTable("models");
                });

            modelBuilder.Entity("Shopy.Web.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("CartId")
                        .HasColumnType("int")
                        .HasColumnName("cartId");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("category");

                    b.Property<string>("ClientUsername")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("clientUsername");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("model");

                    b.Property<decimal?>("Rate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(2,1)")
                        .HasColumnName("rate")
                        .HasDefaultValueSql("'0.0'");

                    b.Property<string>("VendorUsername")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("vendorUsername");

                    b.HasKey("Id");

                    b.HasIndex("Model");

                    b.HasIndex(new[] { "CartId" }, "cartId");

                    b.HasIndex(new[] { "ClientUsername" }, "clientId");

                    b.HasIndex(new[] { "VendorUsername" }, "vendorId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("Shopy.Web.Models.Vendor", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("username");

                    b.Property<string>("City")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("country");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("Username")
                        .HasName("PRIMARY");

                    b.ToTable("vendors");
                });

            modelBuilder.Entity("Shopy.Web.Models.Cart", b =>
                {
                    b.HasOne("Shopy.Web.Models.Client", "ClientNavigation")
                        .WithMany("Carts")
                        .HasForeignKey("ClientUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("carts_ibfk_1");

                    b.Navigation("ClientNavigation");
                });

            modelBuilder.Entity("Shopy.Web.Models.Product", b =>
                {
                    b.HasOne("Shopy.Web.Models.Cart", "Cart")
                        .WithMany("Products")
                        .HasForeignKey("CartId")
                        .HasConstraintName("products_ibfk_3");

                    b.HasOne("Shopy.Web.Models.Client", "ClientNavigation")
                        .WithMany("Products")
                        .HasForeignKey("ClientUsername")
                        .HasConstraintName("products_ibfk_2");

                    b.HasOne("Shopy.Web.Models.Model", "ModelNavigation")
                        .WithMany("Products")
                        .HasForeignKey("Model")
                        .IsRequired()
                        .HasConstraintName("products_ibfk_4");

                    b.HasOne("Shopy.Web.Models.Vendor", "VendorNavigation")
                        .WithMany("Products")
                        .HasForeignKey("VendorUsername")
                        .IsRequired()
                        .HasConstraintName("products_ibfk_1");

                    b.Navigation("Cart");

                    b.Navigation("ClientNavigation");

                    b.Navigation("ModelNavigation");

                    b.Navigation("VendorNavigation");
                });

            modelBuilder.Entity("Shopy.Web.Models.Cart", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Shopy.Web.Models.Client", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Shopy.Web.Models.Model", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Shopy.Web.Models.Vendor", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
